
function [] = kalman_filter(movfilestr)

%parameters
steps = 50; % [50] number of frames to track
startframe = 200; % starting frame
framenum = 1;

% get user input
numsets = input('\nEnter number of particle sets: ');


% load the movie
close all;
% hold on;

DctDemoFig = figure( ...
   'Name','2-D DCT Image Compression Demo', ...
   'NumberTitle','off', 'HandleVisibility', 'on', ...
   'tag', '2D DCT Image Compression Demo', ...
   'Visible','off', 'Resize', 'off',...
   'BusyAction','Queue','Interruptible','off',...
   'IntegerHandle', 'off', ...
   'Doublebuffer', 'on');


%{
hTrueAx = axes('Parent', DctDemoFig, ...
   'units', 'pixels', ...
   'BusyAction','Queue', ...
   'Interruptible','off');
   %}

mov = aviread(movfilestr,startframe:(startframe+steps));
img = mov(1).cdata;
imgh = image(img);
%imgh = imshow(img,'InitialMagnification','fit');
%imgh = image('Parent',hTrueAx, ...
%    'EraseMode','none', ...
%    'BusyAction','Queue', ...
%    'CDataMapping', 'scaled', ...
%    'Interruptible','off');
%set(imgh,'CData',img);
drawnow;
pause();

%{
psets(numsets) = particle_set;
for i = 1:numsets
   psets(i) = particle_set(steps);
   psets(i) = psets(i).initialize(img);
end
%}

for s = 1:steps
    fprintf('Step %d\n',s); % DEBUG
    
    % show current image
    img = mov(framenum).cdata;
    set(imgh,'CData',[]);
    drawnow;
    pause();
    % imshow(img,'InitialMagnification','fit');
    framenum = framenum + 1;
            
    % update all particle sets
    for i = 1:numsets
        % psets(i) = psets(i).track_target_step(s,img);
    end
end


    
